/* there is no need to define anything inside of the destination
CSS class since the keyframe will take charge of the animation */
.fade {
    opacity:1;
}
.fade.ng-leave {
    animation: my_fade_animation 0.5s linear;
    -webkit-animation: my_fade_animation 0.5s linear;
}

@keyframes my_fade_animation {
    from { opacity:1; }
    to { opacity:0; }
}

@-webkit-keyframes my_fade_animation {
    from { opacity:1; }
    to { opacity:0; }
}

.firstSampleAnimation.ng-hide-add,
.firstSampleAnimation.ng-hide-remove {
    -webkit-transition: 1s ease-in-out opacity;
    transition: 1s ease-in-out opacity;
    opacity: 1;
}
.firstSampleAnimation.ng-hide {
    opacity: 0;
}

    /* ngIf animation */
.animationIf.ng-enter,
.animationIf.ng-leave {
    -webkit-transition: opacity ease-in-out 1s;
    transition: opacity ease-in-out 1s;
}
.animationIf.ng-enter,
.animationIf.ng-leave.ng-leave-active {
    opacity: 0;
}
.animationIf.ng-leave,
.animationIf.ng-enter.ng-enter-active {
    opacity: 1;
}
