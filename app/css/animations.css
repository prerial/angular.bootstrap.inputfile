.navbar-fixed-left {
    width: 140px;
    position: fixed;
    border-radius: 0;
    height: 100%;
}

.navbar-fixed-left .navbar-nav > li {
    float: none;  /* Cancel default li float: left */
    width: 139px;
}

.navbar-fixed-left + .container {
    padding-left: 160px;
}

/* On using dropdown menu (To right shift popuped) */
.navbar-fixed-left .navbar-nav > li > .dropdown-menu {
    margin-top: -50px;
    margin-left: 140px;
}


.view-animate-container {
    position:relative;
    /*     height:100px!important;
        background:whi
        border:1px solid black;
        height:40px;*/
    overflow:hidden;
}

.view-animate {
    padding:10px;
}

.view-animate.ng-enter, .view-animate.ng-leave {
    transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1.5s;

    display:block;
    width:100%;
    border-left:1px solid black;

    position:absolute;
    top:0;
    left:0;
    right:0;
    bottom:0;
    padding:10px;
}

.view-animate.ng-enter {
    left:100%;
}
.view-animate.ng-enter.ng-enter-active {
    left:0;
}
.view-animate.ng-leave.ng-leave-active {
    left:-100%;
}



/* there is no need to define anything inside of the destination
CSS class since the keyframe will take charge of the animation */
.fade {
    opacity:1;
}
.fade.ng-leave {
    animation: my_fade_animation 0.5s linear;
    -webkit-animation: my_fade_animation 0.5s linear;
}

@keyframes my_fade_animation {
    from { opacity:1; }
    to { opacity:0; }
}

@-webkit-keyframes my_fade_animation {
    from { opacity:1; }
    to { opacity:0; }
}

.firstSampleAnimation.ng-hide-add,
.firstSampleAnimation.ng-hide-remove {
    -webkit-transition: 1s ease-in-out opacity;
    transition: 1s ease-in-out opacity;
    opacity: 1;
}
.firstSampleAnimation.ng-hide {
    opacity: 0;
}

    /* ngIf animation */
.animationIf.ng-enter,
.animationIf.ng-leave {
    -webkit-transition: opacity ease-in-out 1s;
    transition: opacity ease-in-out 1s;
}
.animationIf.ng-enter,
.animationIf.ng-leave.ng-leave-active {
    opacity: 0;
}
.animationIf.ng-leave,
.animationIf.ng-enter.ng-enter-active {
    opacity: 1;
}
